apiVersion: v1
data:
  kubeconfig: apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVU1TSmg3MHFxemd3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpFeE1ERTRNakV3TXpRd1doY05NekV4TURFMk1qRXdNelF3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlFLeTdFUjNCQ0pUMkhBMkVId1FlNVJVWGs0NlNSLwpFR05aTFhTdFdRVktuTk01M1VOajhsWlpoNDJ1MXhuTk1tcnNMVWlqNk1oYU41TFE5SG9HemJpMWQ1NGp1aGNzCnJ1R0tvaHp6QWl5Q3FpMFpLWnlMVnRLZWd4RkJkbWxKR0ppeW53L0srMzJtMGdncEhnZFMzYTkxVWJjOUNOczgKQ2U2MDZmZHJaL2dhdG9EdDhjU2plVHp5NWFqR1grQk1MSHNvN1ZMdlgrZ0NKdytWSUxwU1NKTnJmNFNRbzRINgpMZWJmelVqZHJDOFV0b256eSt1eWU5OG9OSjJNK2N4eS9BMTV5ekpkUEt2TVo0RnY5V1pCWEk3NUVHRE9iOU5oCmErSjV6ZXJqdzV0Y0JqZDBVZlE5bWtRcW1mNEU4YkVSQ3J4d3M3Qkx4aWFrR1ZrU1JQbHdxK01DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNzNAo3QXVMeVJPblcycHpaZHVjT2FJc3F4bHRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUE0Vm1vajhRSU11N2lMCmVxTkw3NDEzcXF3SkxIaG1mZ0tqUUE1NklZZ1p4aWRIaFBxSkVkbEFpL0ROaDdQNHhqcThCSlF2K3ZueG5LNVEKL21weFBQWUVkU0tiQkZYVDR1d3V0cithcElBL1JIdTBpWVV4Y3FUSTJWOGgwSmlCcWNSSVQyZmRWUlJzcDFoego2aitwOU41UVJLY1lqOVVtY0g3MHRpNGJxZXZNU2J1VHVNdWdnQmxwY09WN0tGS1BMeDczZUFmOEdIV004L0FZCnd3Qm56ampVMWZqSHd4T1NaRE52ZkorK2VoUkFFL2tLMFFmbVdZdTVPQTNGNWpZcVBrcW5Qa3dnbTlVLytyWngKaFJxWTBnbG90akY3aExUVkRuYnNpcDVpRXo3NGV6WFFhY1NvaE4rVVhkdFd1VXh4dC9PYWdDQ3RqNFNDaUdEVQp5Sm1kUnRhKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSVdveGNCU09EaktRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJeE1UQXhPREl4TURNek9Wb1hEVE14TVRBeE5qSXhNRE16T1Zvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0RmlEdmdpM2Y5UncKTEZFWitwcjEyYTNBTjk2aTdkWUpmY0pYQjJIVFNWUGNrUDJTQUFabEswQWhsWkx3TlRXdWpVMjE3bUtrdCtHSgppZU5OaG5VYlpVK2NybGlUbkFCTkxCOXZDU3g1ZkV3ZUNDY2IrSWlaMmgvUHlsYVlRT3I4L2dlY3BnU0twemljCno3TWh5SjRDR1BuL25kZ2Qzays4bTNBQ1E0UG9GOFhVL3hNVFJDaXRMZ21xdFFQOXk1VEo5NFhIcUtSVmtjMG8KR3dvYXZCUmFpSEpsVXdKbEdsRElEOWdWbnU1dUpoU3IxQVIvUFZhV0x0UDk3akZ5dWR3SzcyeUMxQVcremprMAo4WElVTDIzT3BpeDVXVWNaaXAxbXFud3F2UW9JWnhCVkxYSHRyWHUrVWlzbDUyU0RGMGp4bjU0cnNBaHlwT3RqCnpRV0c1NDVHb3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdzb0tKcjRUSjZuK3ZJc0QzNXR6RkxpU3Yrd3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUFKeEwyaklaV05lcnFUOXMxdTZqWTNwTnR2VCtpOHR5Qk9nbXhwa3poM2w5cDJoSTVUY0VFRlJsMDJ2CldwSFh0SjI1TEVYZFBDN0ZMK2NmK29nN0Z1amJvMzVXeEEwOTNFZlNvOFBXNGlCM3JDRmpSSUluR3JrbG5iclgKNjdKMXJ0WTlXR1BjdzE3VVEreityeS85dVZob1MvaEtObkNCWUFGYVhuTURpNU1RUFN6YlRwSS9scDV3SEZKawpHdUpIVE8yOU9wMGNsWXQrL0ZvRFVtSzQzRmQxUnlLaExMd3hEaS9WOUNSRGk5NCszS3hMN2JEQnNrSDJ3VkNkCnAvNFRqVE1VM016U3hSZ2JxWmpZMXZxTW4wRlcxeU5tOW9UajlVMEdscXlEd3czVXcyVHZMUG1qMzFORGJGRGkKVk1nenF6VUl4VzkyL21DbnFScm82UGpxSXZBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSVJsUmIvcERGeEFFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl4TVRBeE9ESXhNRE0wTUZvWERUTXhNVEF4TmpJeE1ETTBNRm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTdWV2x1aUkrSjVteDg0QmU2YzFmMGVyOTJhY2dFeDJWTk4rcmdNVHRXUE9EYTBSL2l1R2M0bm45ZjI0RwpmcktSR0ZCR005TkMxWHd1d05HWGNqRU1FV1NkS2N4U3U1MkY1MXExOWp1cmozbEp5R29kZFEvcDhiY1VXUVVkClZPS2k4dGZ5WDFNY2lwa3BaV24vbXJ3VlpqRlNsd1crbWp5cm5hK0NXSG90WmsySkkxTkdGM3hHalRkSTlxcFAKSVRVeU9UdVNQUENHU2lYN0pXVy8zeU16bUJrc1E0anBmR2dnbTg5VTZDTjZXZ2MwU0RHNmE1WkxGaDEwMG1Kawp5UkM2VS9VU2ozNndET1pVZ3VVeUlhV0svWmtGN1laMFJXa1FabVNRV3lJbVJMM0lHQVhWQW1DNWhxTGUxb1czCjhRSXV1M25Xemd2U3hDUnBsQXZNTXBHaENRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVCQUR4STQ4clNpVzFOS0h2S0lIUEllaHNoZWd3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNOEs0M0Z1b0M0WmM4dlBJQlNZS3k5eFlkc2IzR0ZFeDZHTXdUVzU5TXhJClRkMW1VUlNMMVlxdE84NHBGcVpEN0xYQWtEbk5RQ2pVS2pPSHluME5WWjI2N1VZa2tOM1VlME1hY0VZQWpxMmsKUTFaS2l0M2VzWDYrMFBza1k2WFlCdzZIc2E4aUR4c3NjRzBBcEVTOVFvT1V6TGhwZUtMU0x0Z1NSblFTZERFSQpET1ArTndtOXR5RVFNV0FkcXJIL2JqQzI0eVl4YVdBMU1KMnl5RFdid2REQnlodVBWSE1KZlNhUllzUjF5c0c0Cm9FWHJlek8rWEtvVGxEU04yNStkWFlKenlMRUdETE44WTI0aW9TaVZSVnU5VjJ3TkJSbXNxUkxIMU5UbTdQNisKOHI5U1lOV1YvR2FMSXI2VWc1OGpiTDJkV2NBY2dabE5udlZRcDhBdUlXaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlEemNIeXRoT0Ftc3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TmpNME5Ua3hORGt5TUI0WERUSXhNVEF4T0RJeE1URXoKTWxvWERUTXhNVEF4TmpJeE1URXpNMW93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOak0wTlRreE5Ea3lNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlaMlQKMnVXdUFGZC9ERmRFOHlXSGNINzZyRERXZHI5L0dUL05qTFFzbzBUN2huRG9uRGM4Y0xuWXhnS2VCUUZLZ2FuUQpCZVZsQmpqQ0hzWGZuY1hNN0Z3dlVYVkRYSzhhRllNTTNDUmQrcHdFRmVObW9JTDd6QkZjMHF0cTNZRGR2dEtRClNpbnY4ZE5lQmZYM2o2bUFvQS9iSFVwUWIwUXk3bDlOWVJjZi85VUc1ZWxQWE52bys4V0tkbkZsaEVYYkEydksKK0c4T3pGN0d5MitGVzBuRFBESG5pOG1qRVhNQ1d2Q0JOUFdTdUlFd3RkbGt0RWZ5Z0drZEFQSUMwejZSRWVtYgpkOTFNVkRBMkdyR00xZ3M3NFNjREcvYUVQU1lieFdyNkhsMTdXQ3Brd2ZQMDZDUnBDWUwvK2hteUE0V1ZqMGpXCm5GNFA1OVJ6OUIxWCtUa2hOUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVUHN0bDJNekV0ZWJac3dvZzl0TTAwVHpmUUVJd0h3WURWUjBqQkJndwpGb0FVUHN0bDJNekV0ZWJac3dvZzl0TTAwVHpmUUVJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKbFQ3eFFICmZpSlJVT0xONlZOcFlvSWdnbjBBYmh3VTdYUjFGN3lrbHNLNVQvSG9EeTRkeCtPRXpFc1o0dkUydVRHQlIxdGcKNU9ZNkZjTWg2MERvSEFrSUdxaklqU0k2MmNsYk9lUGsvcElKZDBiSDMwK1dERmZNSjV6UmhZN0RlQmlwdWxNaQp4Mm9GaFl3RWIwT293UU1rZ1NjVTRWb3J5RE5rR2tJMU9qNTNTVWQ0cndGMjdOSHFoR2Rub2xVbllLYnRmSzlwCmFNZ0NmZlhEWlN0R3pQOWs4bis2SGt3bUxjZEhiYVBwZEdsdk5MT3RBQ0MvcUpiN1JCcStzaTZLZ3lqWFVqMG0KZmlleTZMWFBpelZCdFpiL2VXbFlMSDVKTURRa1Axa0F2aGtMR1lhazFuejVoMXBkV0NzSzE4SldCV0wyV2RZcgpwcHdwRjEyZDJRQVBpS0k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaVENDQWsyZ0F3SUJBZ0lJS0RCeDQ5NndTT0V3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qTTBOVGt4TlRjeE1CNFhEVEl4TVRBeE9ESXhNVFV3T1ZvWApEVEl6TVRBeE9ESXhNVFV4TUZvd0lqRWdNQjRHQTFVRUF3d1hLaTVoY0hCekxtaDFZaTV5YUc5amNHeGhZaTVqCmIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESUd4QS9qWHlFc3o5UTFlY3IKT09KSVloZzVCVkRzcm42cVZZWE9yMmpqYkVhdlZiOGd3M1Z1anFPQmlvdEFHckZPWlYrVmpsaXUwREw0Tmh6Qwpvck1KT0dTcGVVNit2aElsRlM3UG03aDJvUE03M3VUT0w5U2tKTTRSenRZODZkdkhJSndITEFyRHovaTZNREhqCjd2ZDZ3cytKWFQ2Q2JnM0g1Z2Y2bnhFMWRNRXczaGxKa2NvRmo2MWdia2x0MVRWcE92SFZ1WnZKWnVhYkloekoKZE9mTVF5NmpnL3NrZDB3dG9CL3pjRDR3NDNhRERGZGxkNVJXS0JVbnp1dFAzdEw3bGoxSG5zakZDQnR5TWxWNQpvVFZnNzI5VzRFMXhIYTlxb0cvL0JtdENCeXJWL1MvT1RZbUF3dDBsdGZMUTA0ekdNanJzWlZKdUNadmFDd2MyCjl4bS9BZ01CQUFHamdab3dnWmN3RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUYKQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkZEWVRkMkZhUWVYdnJoam01dzdDcFA0akpVQgpNQjhHQTFVZEl3UVlNQmFBRkZLWmpCa1lXanltdTNtbmVpS2RxR29DVTRiMU1DSUdBMVVkRVFRYk1CbUNGeW91CllYQndjeTVvZFdJdWNtaHZZM0JzWVdJdVkyOXRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNVTXBzWHlBU2IKbEpUdFZKc2t3TVNVeTZNbHZ5V3BrY3pTVWJONk8xakwyNDMyRWExc2RTNTFrem4wQkw0UEZFYTdCYjI2Sm9VTQo0YUh6N0duNFc2cUN4UGNsTlM0VkZtWjJoMHFvTkx4OTBFcXFjaVZ2V0wvc0hlTFQ0Vk5EbVlsYW02ZGF0ZVpFCjh2UVp3Z3ZMZXRVRzdWTlo3b1hBTXJHdlRFVlkrdEhHdmZwSEJhNVNiMlhNQjBQYVlnT1k3WXZWeDJnOXhjbEEKZzdnOUNqVS9jNjhuNCsrTmZuTFdQTmpHcUxHNXhIaDJvbEZjc3JvakZoYWljTGZ0dnc0Q2VYMjZETkJWVWlVagp5KzJneDM3TTNuN3RLS3NyRGdBVDV2WXg4blcwdjg2eXFqOEtvQXQzdmFDSTFUUlFqL3dwVkVKdEdiWlVpYk1BCjlWN0l2WFgwNkNFUgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlERERDQ0FmU2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUyTXpRMU9URTFOekV3SGhjTk1qRXhNREU0TWpFeE1qVXdXaGNOTWpNeE1ERTQKTWpFeE1qVXhXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMk16UTFPVEUxTnpFdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFI5R0o0NFVRaTRNeVJ6MkhsU1N5Ckxna3doL3ZWNDY0eVNSc1BoekRKYm53c1VrbXc0THdJSTB4TkNidjVYbVRyWVhJaDNUNS9mMWJxVVV1OHdtY2gKYjMrcWZrb1NNZXBIdXF1MC9DbHVLTWlmNHhFVkNuQ0F1cnNxbkZwUVJOT25TaENRcjBCOURUYWpEODIrS2M5MQp6VlVyeTdQNGM1dmluL29OWE93eVU5NFJVaUE2dmJGNmtMMWlnVkFmekMvU1BBQkM0T0MrWDIybHNQVFpHSVFLCjEyQ3FkcHVMUEJ2aFNGRndSVTU5Z0NwVVN6M0lWdG5KUnVjbmRpcVgyeEpqRmJFT0NJNkhZbEJ1K25hK3dRb3AKL2tIS2xQdlNVZkVxTUM1U09JUW5DNVl5ZkdYbkZKSVMzSy9Tbkdsa0NZRGFWUUx1L1ROdG11SkxSNVpTUTZrLwpBZ01CQUFHalJUQkRNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHCkExVWREZ1FXQkJSU21Zd1pHRm84cHJ0NXAzb2luYWhxQWxPRzlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKT0RLOEJaNWZUMStGRTZod2ZzRElKWmVCVkthNUZOdmhDcnZIblFoWWVwRHhmOU1wL1dsSTJiYnJlK0cwYmNRawpic0xTZGVNdE9rMmZWNlU2dzFrd3FnY24xNzNUaFA4STNoZndOZHhqc2NWdERJc2pMYllVREZwYjdjc2JuOFgzCkdBRjZBZCtJLzVLL3VBdXJNUS8xYm9hM2FudDdXNTk0Y3NRWUJ4MXF4RFd2b1E2eDVId29VQXUzV0x2R01rVG8KZjkyMVJBU2JDNG9WTURDb0JTUGlqMkZsMVEyVmlFZEJCWE44bCttUUh5R3hHRzl4dGFuT3RQMlF3QWFEU2VXQwpQOUFMcStUV1dNN3BBM0RsK0VkRDJlVmxLNHN6OU1KdjFraStzakZ5TUFHZm5KOFVGc21IY29xamhpSXBYcDNrCkxqTU8zS0hrVmw1VzJEajZ4dGprNlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://api.hub.rhocplab.com:6443
  name: default-cluster
contexts:
- context:
    cluster: default-cluster
    namespace: default
    user: default-auth
  name: default-context
current-context: default-context
kind: Config
preferences: {}
users:
- name: default-auth
  user:
    token: eyJhbGciOiJSUzI1NiIsImtpZCI6ImtUdWp0ZUM2VUUtQkRVNk5SNjJua2QtTDNLVGh3SVdiTnpEMkxWRVRmUmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtaWNyb3NoaWZ0LWxhYmVsIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1pY3Jvc2hpZnQtbGFiZWwtYm9vdHN0cmFwLXNhLXRva2VuLTcyNnB6Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6Im1pY3Jvc2hpZnQtbGFiZWwtYm9vdHN0cmFwLXNhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMGZlNTY3NzEtZjI0OS00NjliLWI3ZjYtYTI4ODQ3YTA2YTk4Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Om1pY3Jvc2hpZnQtbGFiZWw6bWljcm9zaGlmdC1sYWJlbC1ib290c3RyYXAtc2EifQ.DNSCdEFo7Maum4ZcdFCefi3YSsdwcxeLIp2d9o-SKZssC8kE0wK6PcuF6vxh2MNHiEJ42CgID3asIatUKto3rKEs5UBt6hD0_BdRZY0AqYEY5xneoRW2c43chOdTRNDtgFsEV6-7Sp620f9OrwExzkAREJSfwh0K1Kkq7tci0gqT6QG2uEqfZHLI63HxNS7opUUtORKfYo6DgP3-r2slAvmwqSNN59U9n321vIze8bSCa3lWDKZpomEEfRfD_lEbV640ws8F5RZizQHa-7uCQxjeYvekNOdP468BPvyl011DSa687JqpO6TunxSsGtzBmAVEQiShEuz8QDjeANqQ4tItEvsfFsgHoNtyJ7HJXphSIk4vtpCNDCt9tjYgLQz9A9LZQLfuqBtxT0q4wNFPz0P5Sks4WIB6pdLNAPlwyjrM3pPW8tjxv9kmpi86ygqqa6mZ8Jb17_mVTGuTtzkQL29MQ7wEsTZH4tlCFwv3xYfmeFvPE42nBrQfjbkny8C326fZoAjI2vFheBNoGgeJeXwVouEkn5qwap4fF_A41KC1bLbWK4LUGutO2awMGJ_XmLfMEqQy7GkgCZEn2s8RZlO4fJzuLwROy1Xygy9wC5rH1oJSTdT-0kSladJNsioN3qWV8tt8KfEvl5cx-qxlSFH2OhFShu-jZObb9uwm8OI

kind: Secret
metadata:
  name: bootstrap-hub-kubeconfig
  namespace: open-cluster-management-agent
type: Opaque

